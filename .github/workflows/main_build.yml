name: PlatformIO CI main release

on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.platformio/.cache
          key: ${{ runner.os }}-pio
      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - name: Install PlatformIO Core
        run: pip install --upgrade platformio

      - name: write temp file with build number and set to env variable
        run: |
          touch ${{ github.workspace }}/include/buildnumber.txt
          printf -v BUILDNUMBER "%04d" ${{github.run_number}}
          echo $BUILDNUMBER >> ${{ github.workspace }}/include/buildnumber.txt
          echo "got current buildnumber and saved: "
          cat ${{ github.workspace }}/include/buildnumber.txt
          echo "CURRENT_BUILDNUMBER=$BUILDNUMBER" >> $GITHUB_ENV

      - name: Build PlatformIO Project
        run: pio run

      - name: got current version and changing firmware name after building
        run: |
            VERSIONNUMBER=$(python ${{ github.workspace }}/version_inc.py getversion 2>&1)
            echo "got versionnumber: " $VERSIONNUMBER
            echo "CURRENT_VERSIONNUMBER=$VERSIONNUMBER" >> $GITHUB_ENV
            mv .pio/build/esp32/firmware.bin .pio/build/esp32/dtuGateway_ESP32_release_$VERSIONNUMBER.bin
            mv .pio/build/esp32_S3/firmware.bin .pio/build/esp32_S3/dtuGateway_ESP32_S3_release_$VERSIONNUMBER.bin
            mv .pio/build/esp32_S3_16MB_N16R8/firmware.bin .pio/build/esp32_S3_16MB_N16R8/dtuGateway_ESP32_S3_16MB_PS_release_$VERSIONNUMBER.bin

      - name: Create factory flash packages for each ESP32 variant
        run: |
            VERSIONNUMBER=${{ env.CURRENT_VERSIONNUMBER }}
            
            # Create factory flash directories
            mkdir -p .pio/build/factory_flash_esp32
            mkdir -p .pio/build/factory_flash_esp32_S3
            mkdir -p .pio/build/factory_flash_esp32_S3_16MB
            
            # ESP32 factory flash package
            cp .pio/build/esp32/bootloader.bin .pio/build/factory_flash_esp32/
            cp .pio/build/esp32/partitions.bin .pio/build/factory_flash_esp32/
            cp doc/boot_app0.bin .pio/build/factory_flash_esp32/
            cp .pio/build/esp32/dtuGateway_ESP32_release_$VERSIONNUMBER.bin .pio/build/factory_flash_esp32/firmware.bin
            
            # ESP32-S3 factory flash package
            cp .pio/build/esp32_S3/bootloader.bin .pio/build/factory_flash_esp32_S3/
            cp .pio/build/esp32_S3/partitions.bin .pio/build/factory_flash_esp32_S3/
            cp doc/boot_app0.bin .pio/build/factory_flash_esp32_S3/
            cp .pio/build/esp32_S3/dtuGateway_ESP32_S3_release_$VERSIONNUMBER.bin .pio/build/factory_flash_esp32_S3/firmware.bin
            
            # ESP32-S3 16MB factory flash package
            cp .pio/build/esp32_S3_16MB_N16R8/bootloader.bin .pio/build/factory_flash_esp32_S3_16MB/
            cp .pio/build/esp32_S3_16MB_N16R8/partitions.bin .pio/build/factory_flash_esp32_S3_16MB/
            cp doc/boot_app0.bin .pio/build/factory_flash_esp32_S3_16MB/
            cp .pio/build/esp32_S3_16MB_N16R8/dtuGateway_ESP32_S3_16MB_PS_release_$VERSIONNUMBER.bin .pio/build/factory_flash_esp32_S3_16MB/firmware.bin
            
            # Create flash instructions for each variant
            cat > .pio/build/factory_flash_esp32/FLASH_INSTRUCTIONS.txt << 'EOF'
            ESP32 Factory Flash Instructions
            ================================
            
            Use ESP32 Download Tool or esptool.py with these settings:
            
            Files and addresses:
            - bootloader.bin  → 0x1000
            - partitions.bin  → 0x8000  
            - boot_app0.bin   → 0xE000
            - firmware.bin    → 0x10000
            
            ESP Download Tool settings:
            - SPI Speed: 40MHz
            - SPI Mode: QIO
            - Flash Size: 4MB
            - Baud rate: 921600
            
            esptool.py command:
            esptool.py --chip esp32 --baud 921600 --before default_reset --after hard_reset write_flash \
              0x1000 bootloader.bin \
              0x8000 partitions.bin \
              0xe000 boot_app0.bin \
              0x10000 firmware.bin
            EOF
            
            cat > .pio/build/factory_flash_esp32_S3/FLASH_INSTRUCTIONS.txt << 'EOF'
            ESP32-S3 Factory Flash Instructions
            ===================================
            
            Use ESP32 Download Tool or esptool.py with these settings:
            
            Files and addresses:
            - bootloader.bin  → 0x1000
            - partitions.bin  → 0x8000
            - boot_app0.bin   → 0xE000
            - firmware.bin    → 0x10000
            
            ESP Download Tool settings:
            - SPI Speed: 40MHz
            - SPI Mode: QIO
            - Flash Size: 8MB
            - Baud rate: 921600
            
            esptool.py command:
            esptool.py --chip esp32s3 --baud 921600 --before default_reset --after hard_reset write_flash \
              0x1000 bootloader.bin \
              0x8000 partitions.bin \
              0xe000 boot_app0.bin \
              0x10000 firmware.bin
            EOF
            
            cat > .pio/build/factory_flash_esp32_S3_16MB/FLASH_INSTRUCTIONS.txt << 'EOF'
            ESP32-S3 16MB Factory Flash Instructions
            ========================================
            
            Use ESP32 Download Tool or esptool.py with these settings:
            
            Files and addresses:
            - bootloader.bin  → 0x1000
            - partitions.bin  → 0x8000
            - boot_app0.bin   → 0xE000
            - firmware.bin    → 0x10000
            
            ESP Download Tool settings:
            - SPI Speed: 40MHz
            - SPI Mode: QIO
            - Flash Size: 16MB
            - Baud rate: 921600
            
            esptool.py command:
            esptool.py --chip esp32s3 --baud 921600 --before default_reset --after hard_reset write_flash \
              0x1000 bootloader.bin \
              0x8000 partitions.bin \
              0xe000 boot_app0.bin \
              0x10000 firmware.bin
            EOF
            
            # Create ZIP packages for easier distribution
            cd .pio/build
            zip -r dtuGateway_ESP32_FactoryFlash_release_$VERSIONNUMBER.zip factory_flash_esp32/
            zip -r dtuGateway_ESP32_S3_FactoryFlash_release_$VERSIONNUMBER.zip factory_flash_esp32_S3/
            zip -r dtuGateway_ESP32_S3_16MB_FactoryFlash_release_$VERSIONNUMBER.zip factory_flash_esp32_S3_16MB/
            cd ../..
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dtuGateway_release_${{ env.CURRENT_VERSIONNUMBER }}
          path: |
            .pio/build/esp32/dtuGateway_ESP32_release_${{ env.CURRENT_VERSIONNUMBER }}.bin
            .pio/build/esp32_S3/dtuGateway_ESP32_S3_release_${{ env.CURRENT_VERSIONNUMBER }}.bin
            .pio/build/esp32_S3_16MB_N16R8/dtuGateway_ESP32_S3_16MB_PS_release_${{ env.CURRENT_VERSIONNUMBER }}.bin
            .pio/build/dtuGateway_ESP32_FactoryFlash_release_${{ env.CURRENT_VERSIONNUMBER }}.zip
            .pio/build/dtuGateway_ESP32_S3_FactoryFlash_release_${{ env.CURRENT_VERSIONNUMBER }}.zip
            .pio/build/dtuGateway_ESP32_S3_16MB_FactoryFlash_release_${{ env.CURRENT_VERSIONNUMBER }}.zip
            .pio/build/factory_flash_esp32/
            .pio/build/factory_flash_esp32_S3/
            .pio/build/factory_flash_esp32_S3_16MB/

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "v${{ env.CURRENT_VERSIONNUMBER }}"
          draft: true
          prerelease: false
          title: "dtuGateway v${{ env.CURRENT_VERSIONNUMBER }}"
          files: |
            .pio/build/esp32/dtuGateway_ESP32_release_${{ env.CURRENT_VERSIONNUMBER }}.bin
            .pio/build/esp32_S3/dtuGateway_ESP32_S3_release_${{ env.CURRENT_VERSIONNUMBER }}.bin
            .pio/build/esp32_S3_16MB_N16R8/dtuGateway_ESP32_S3_16MB_PS_release_${{ env.CURRENT_VERSIONNUMBER }}.bin
            .pio/build/dtuGateway_ESP32_FactoryFlash_release_${{ env.CURRENT_VERSIONNUMBER }}.zip
            .pio/build/dtuGateway_ESP32_S3_FactoryFlash_release_${{ env.CURRENT_VERSIONNUMBER }}.zip
            .pio/build/dtuGateway_ESP32_S3_16MB_FactoryFlash_release_${{ env.CURRENT_VERSIONNUMBER }}.zip
            include/version.json